{"name":"Units","tagline":"Specification for units found in metric specifications.","body":"Units\r\n===\r\n\r\n> Specification of units found in metric specifications.\r\n\r\n\r\n## Table of Contents\r\n\r\n1. \t[Units](#units)\r\n\t-\t[Current](#current)\r\n\t\t* \t[A](#a)\r\n\t- \t[Voltage](#voltage)\r\n\t\t*\t[V](#v)\r\n\t- \t[Temperature](#temperature)\r\n\t\t*\t[C](#c)\r\n\t-\t[Digital Information](#digitial-information)\r\n\t\t*\t[KB](#kb)\r\n\t\t*\t[KiB](#kib)\r\n\t\t*\t[MB](#mb)\r\n\t\t*\t[MiB](#mib)\r\n\t\t*\t[GB](#gb)\r\n\t\t*\t[GiB](#gib)\r\n\t\t* \t[MB/s](#mbs)\r\n\t- \t[Memory](#memory)\r\n\t\t*\t[hugepages](#hugepages)\r\n\t- \t[Time](#time)\r\n\t\t*\t[ms](#ms)\r\n\t\t*\t[s](#s)\r\n\t- \t[Other](#other)\r\n\t\t* \t[I/O](#io)\r\n\t\t*\t[rpm](#rpm)\r\n\t\t*\t[utilization](#utilization)\r\n1. \t[Contributing](#contributing)\r\n1. \t[Usage](#usage)\r\n\t-\t[Bower](#bower)\r\n1. \t[License](#license)\r\n\r\n\r\n## Units\r\n\r\nA metric may have one of the following units... \r\n\r\n\r\n===\r\n### Current\r\n\r\n#### A\r\n\r\n[ampere](http://en.wikipedia.org/wiki/Ampere): the amount of electric charge passing a point in an electric circuit per unit time.\r\n\r\n\r\n===\r\n### Voltage\r\n\r\n#### V\r\n\r\n[volt](http://en.wikipedia.org/wiki/Volt): the difference in electric potential between two points of a conducting wire when an electric current of one ampere dissipates one watt of power between those points.\r\n\r\n\r\n===\r\n### Temperature\r\n\r\n#### C\r\n\r\n[Celsius](http://en.wikipedia.org/wiki/Celsius): unit of measurement for temperature.\r\n\r\n\r\n===\r\n### Digital Information\r\n\r\n#### KB\r\n\r\n[kilobytes](http://en.wikipedia.org/wiki/Kilobyte): 1 `kilobyte` consists of 1000 `bytes`.\r\n\r\n\r\n#### KiB\r\n\r\n[kibibyte](http://en.wikipedia.org/wiki/Kibibyte): 1 `kibibyte` consists of 1024 `bytes`.\r\n\r\n\r\n#### MB\r\n\r\n[megabytes](http://en.wikipedia.org/wiki/Megabyte): 1 `megabyte` consists of 1e6 `bytes`.\r\n\r\n\r\n#### MiB\r\n\r\n[mebibyte](http://en.wikipedia.org/wiki/Mebibyte): 1 `mebibyte` consists of 1024^2 `bytes`.\r\n\r\n\r\n#### GB\r\n\r\n[gigabyte](http://en.wikipedia.org/wiki/Gigabyte): 1 `gigabyte` consists of 1e9 `bytes`.\r\n\r\n\r\n#### GiB\r\n\r\n[gibibyte](http://en.wikipedia.org/wiki/Gibibyte): 1 `gibibyte` consists of 1024^3 `bytes`.\r\n\r\n\r\n#### MB/s\r\n\r\n[megabytes](http://en.wikipedia.org/wiki/Megabyte) per second: 1 `megabyte` consists of 1e6 `bytes`.\r\n\r\n\r\n===\r\n### Memory\r\n\r\n#### hugepages\r\n\r\n[hugepages](http://en.wikipedia.org/wiki/Page_(computer_memory)#Huge_pages): number of pages in memory that are larger than the default page size.\r\n\r\n\r\n===\r\n### Time\r\n\r\n#### ms\r\n\r\nmilliseconds: unit of measurement for time.\r\n\r\n\r\n#### s\r\n\r\nseconds: unit of measurement for time.\r\n\r\n\r\n===\r\n### Other\r\n\r\n\r\n#### I/O\r\n\r\nI/O: input and output.\r\n\r\n\r\n#### rpm\r\n\r\nrpm: revolutions per minute.\r\n\r\n\r\n#### utilization\r\n\r\n[utilization](http://en.wikipedia.org/wiki/Load_(computing)#CPU_load_vs_CPU_utilization): describes a unitless value indicating the extent to which a device is utilized.\r\n\r\n\r\n\r\n===\r\n## Contributing\r\n\r\nTo contribute to the data-type specification, see the contributing [guide](https://github.com/doc-metrix/contributing). Any updates to the specification should be tagged.\r\n\r\n``` bash\r\n$ git tag -a <major.minor.patch> -m \"[UPDATE] version.\"\r\n$ git push origin <major.minor.patch>\r\n```\r\n\r\nUse [semantic versioning](http://semver.org/) (semvar) for communicating versions.\r\n\r\n*\tAny new units should be communicated as `minor` updates.\r\n*\tAny corrections/value modifications should be `patches`.\r\n* \tAny specification restructuring (changing field names, removing fields, etc) should be communicated as a `major` update.\r\n\r\n\r\n===\r\n## Usage\r\n\r\nThe specification is stored as [JSON](http://json.org/), a lightweight data-interchange format. Many languages provide JSON support: [JavaScript](http://www.json.org/js.html), [Python](https://docs.python.org/2/library/json.html), [Go](http://golang.org/pkg/encoding/json/), [PHP](http://php.net/manual/en/book.json.php), [Java](http://json.org/java/), [Haskell](http://hackage.haskell.org/package/json), and [others](http://json.org/).\r\n\r\nYou are free to use the JSON specification, as is. Simply copy the file and use accordingly.\r\n\r\nFor those using package managers to manage dependencies, we provide package manager support, as outlined below.\r\n\r\n\r\n### Bower\r\n\r\nThe specification is registered as a [Bower](http://bower.io) package. Bower provides a straightforward means for managing dependencies.\r\n\r\nIn order to use Bower, you must first install [Node.js](http://nodejs.org/) and [Git](http://git-scm.com/book/en/Getting-Started-Installing-Git). Once the prerequisites are installed,\r\n\r\n``` bash\r\n$ npm install -g bower\r\n```\r\n\r\nTo [install](http://bower.io/docs/api/#install) the latest specification,\r\n\r\n``` bash\r\n$ bower install doc-metrix-units\r\n```\r\n\r\nBower will place the specification in a `bower_components/` directory within the current working directory.\r\n\r\nTo [update](http://bower.io/docs/api/#update) to the latest specification,\r\n\r\n``` bash\r\n$ bower update doc-metrix-units\r\n```\r\n\r\n\r\n## License\r\n\r\n[MIT license](http://opensource.org/licenses/MIT). \r\n\r\n\r\n---\r\n## Copyright\r\n\r\nCopyright &copy; 2014. NodePrime.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}